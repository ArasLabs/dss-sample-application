<AML>
 <Item type="Method" id="7BA81BB29CA94068A2FD520BDC229160" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[const string RequestStateKey = "SyncScopeViewItems_GetFederatedSyncState";
const string StatusProperty = "sync_state";
string[] requiredProperties = new string[] { "global_version", "itemtype" };
string select = this.getAttribute("select", string.Empty);
IEnumerable<string> properties = select.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
properties = properties.Select(p => p.Trim());

Stack<bool> isPropertyUsed = (Stack<bool>)RequestState[RequestStateKey];
if (isPropertyUsed == null)
{
	isPropertyUsed = new Stack<bool>();
	CCO.RequestState[RequestStateKey] = isPropertyUsed;
}

isPropertyUsed.Push(properties.Any(p => p == StatusProperty));

if (!isPropertyUsed.Peek())
{
    return this;
}

foreach(string property in requiredProperties)
{
	if (!properties.Any(p => p == property))
	{
		select = string.Concat(select, ",", property);
	}
}
this.setAttribute("select", select);

return this;
]]></method_code>
  <method_type>C#</method_type>
  <name>StatusPropertyCheck</name>
 </Item>
</AML>