<AML>
 <Item type="Method" id="9B7133C7CEB64AAF8068DADEC3AEA572" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[    var ruleId = this.getProperty("rule_id", "");
    
    if (string.IsNullOrEmpty(ruleId))
        return this.getInnovator().newError("Synchronization task creation failure: 'rule_id' property cannot be empty.");
    
    Item syncRule = GetRule(ruleId);
    if (syncRule.isError())
    {
        return syncRule;
    }

    Item tasksForRule = GetTaskForRule(ruleId);
    if (!tasksForRule.isError())
    {
        return this;
    }
    else
    {
        if (tasksForRule.isEmpty())
        {
            return CreateSyncTaks(ruleId);
        }
        return tasksForRule;
    }
}

internal Item GetRule(string ruleId)
{
    Item syncRule = this.newItem("Synchronization Rule", "get");
    syncRule.setID(ruleId);
    return syncRule.apply();
}

internal Item CreateSyncTaks(string ruleId)
{
    var syncTaskReq = this.newItem("Synchronization Task","add");
    syncTaskReq.setProperty("rule_id",ruleId);
    return syncTaskReq.apply();
}

internal Item GetTaskForRule(string ruleId)
{
    Item request = this.newItem("Synchronization Task", "get");
    request.setProperty("rule_id", ruleId);
    request.setProperty("state", "'Not Started', 'In Progress'");
    request.setPropertyCondition("state", "in");
    return request.apply();
    
]]></method_code>
  <method_type>C#</method_type>
  <name>SyncTaskCreate</name>
 </Item>
</AML>